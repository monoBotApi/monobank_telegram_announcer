import requests
import time
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
WEBHOOK_URL = "https://api.monobank.ua/..."
TELEGRAM_BOT_TOKEN = "TELEGRAM_BOT_TOKEN"
TELEGRAM_CHAT_IDS = ["610552091", "6401174198"]  # –°–ø–∏—Å–æ–∫ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
CHECK_EVERY = 5  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥

last_processed_id = None

def send_to_telegram(message):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–≤—É–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –≤ Telegram"""
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    for chat_id in TELEGRAM_CHAT_IDS:
        try:
            response = requests.post(url, json={
                "chat_id": chat_id,
                "text": message,
                "parse_mode": "HTML"
            }, timeout=5)
            
            # –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –æ—Ç Telegram API
            if response.status_code == 200:
                print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {chat_id}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram (—á–∞—Ç {chat_id}): {response.status_code} - {response.text}")
        
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram (—á–∞—Ç {chat_id}): {e}")

def check_new_transactions():
    global last_processed_id
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
        response = requests.get(WEBHOOK_URL, timeout=10)
        response.raise_for_status()
        
        tx = response.json()
        print(f"–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {tx}")  # –õ–æ–≥–∏—Ä—É–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
        
        if not tx or 'data' not in tx or 'statementItem' not in tx['data']:
            print("–û—à–∏–±–∫–∞: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç 'id' –≤ –æ—Ç–≤–µ—Ç–µ")
            return False
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ 'statementItem'
        statement_item = tx['data']['statementItem']
        
        # –ï—Å–ª–∏ —ç—Ç–æ –Ω–æ–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è
        if last_processed_id != statement_item['id']:
            last_processed_id = statement_item['id']
            print(f"–ù–æ–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å ID {statement_item['id']}")  # –õ–æ–≥–∏—Ä—É–µ–º, —á—Ç–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–æ–≤–∞—è
            return statement_item
        else:
            print(f"–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å ID {statement_item['id']} —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞")
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {e}")
    
    return False

def format_message(tx):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    amount = tx['amount'] / 100  # –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ –≥—Ä–∏–≤–Ω—ã
    time_str = datetime.fromtimestamp(tx['time']).strftime('%d.%m.%Y %H:%M')
    
    return (
        f"üí∏ <b>–ù–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂ –≤ Monobank!</b>\n\n"
        f"‚è∞ <b>–í—Ä–µ–º—è:</b> {time_str}\n"
        f"üí∞ <b>–°—É–º–º–∞:</b> {amount:.2f} UAH\n"
        f"üìå <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {tx.get('description', '–Ω–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è')}\n"
        f"üî¢ <b>MCC:</b> {tx.get('mcc', '–Ω–µ —É–∫–∞–∑–∞–Ω')}"
    )

if __name__ == "__main__":
    print("üîç –ù–∞—á–∏–Ω–∞—é –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–ª–∞—Ç–µ–∂–µ–π...")
    print(f"‚è± –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ {CHECK_EVERY} —Å–µ–∫—É–Ω–¥")
    
    try:
        while True:
            tx = check_new_transactions()
            if tx:
                message = format_message(tx)
                send_to_telegram(message)
                print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–ª–∞—Ç–µ–∂–µ {tx['id']}")
            
            time.sleep(CHECK_EVERY)
            
    except KeyboardInterrupt:
        print("\nüõë –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
